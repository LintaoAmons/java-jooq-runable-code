/*
 * This file is generated by jOOQ.
 */
package jooq.setup;


import jooq.setup.tables.City;
import jooq.setup.tables.Country;
import jooq.setup.tables.CountryFlag;
import jooq.setup.tables.CountryLanguage;
import jooq.setup.tables.records.CityRecord;
import jooq.setup.tables.records.CountryFlagRecord;
import jooq.setup.tables.records.CountryLanguageRecord;
import jooq.setup.tables.records.CountryRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CityRecord> CITY_PKEY = Internal.createUniqueKey(City.CITY, DSL.name("city_pkey"), new TableField[] { City.CITY.ID }, true);
    public static final UniqueKey<CountryRecord> COUNTRY_PKEY = Internal.createUniqueKey(Country.COUNTRY, DSL.name("country_pkey"), new TableField[] { Country.COUNTRY.CODE }, true);
    public static final UniqueKey<CountryFlagRecord> COUNTRY_FLAG_PKEY = Internal.createUniqueKey(CountryFlag.COUNTRY_FLAG, DSL.name("country_flag_pkey"), new TableField[] { CountryFlag.COUNTRY_FLAG.CODE2 }, true);
    public static final UniqueKey<CountryLanguageRecord> COUNTRY_LANGUAGE_PKEY = Internal.createUniqueKey(CountryLanguage.COUNTRY_LANGUAGE, DSL.name("country_language_pkey"), new TableField[] { CountryLanguage.COUNTRY_LANGUAGE.COUNTRY_CODE, CountryLanguage.COUNTRY_LANGUAGE.LANGUAGE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CityRecord, CountryRecord> CITY__COUNTRY_FK = Internal.createForeignKey(City.CITY, DSL.name("country_fk"), new TableField[] { City.CITY.COUNTRY_CODE }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.CODE }, true);
    public static final ForeignKey<CountryRecord, CityRecord> COUNTRY__COUNTRY_CAPITAL_FKEY = Internal.createForeignKey(Country.COUNTRY, DSL.name("country_capital_fkey"), new TableField[] { Country.COUNTRY.CAPITAL }, Keys.CITY_PKEY, new TableField[] { City.CITY.ID }, true);
    public static final ForeignKey<CountryLanguageRecord, CountryRecord> COUNTRY_LANGUAGE__COUNTRY_LANGUAGE_COUNTRY_CODE_FKEY = Internal.createForeignKey(CountryLanguage.COUNTRY_LANGUAGE, DSL.name("country_language_country_code_fkey"), new TableField[] { CountryLanguage.COUNTRY_LANGUAGE.COUNTRY_CODE }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.CODE }, true);
}
