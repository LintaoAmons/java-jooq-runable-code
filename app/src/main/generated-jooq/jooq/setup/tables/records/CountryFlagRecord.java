/*
 * This file is generated by jOOQ.
 */
package jooq.setup.tables.records;


import jooq.setup.tables.CountryFlag;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryFlagRecord extends UpdatableRecordImpl<CountryFlagRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.country_flag.code2</code>. Following ISO 3166-1
     * alpha-2 code
     */
    public CountryFlagRecord setCode2(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.country_flag.code2</code>. Following ISO 3166-1
     * alpha-2 code
     */
    public String getCode2() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.country_flag.emoji</code>. Source: Emoji flag
     * symbols (https://apps.timwhitlock.info/emoji/tables/iso3166)
     */
    public CountryFlagRecord setEmoji(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.country_flag.emoji</code>. Source: Emoji flag
     * symbols (https://apps.timwhitlock.info/emoji/tables/iso3166)
     */
    public String getEmoji() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.country_flag.unicode</code>.
     */
    public CountryFlagRecord setUnicode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.country_flag.unicode</code>.
     */
    public String getUnicode() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CountryFlag.COUNTRY_FLAG.CODE2;
    }

    @Override
    public Field<String> field2() {
        return CountryFlag.COUNTRY_FLAG.EMOJI;
    }

    @Override
    public Field<String> field3() {
        return CountryFlag.COUNTRY_FLAG.UNICODE;
    }

    @Override
    public String component1() {
        return getCode2();
    }

    @Override
    public String component2() {
        return getEmoji();
    }

    @Override
    public String component3() {
        return getUnicode();
    }

    @Override
    public String value1() {
        return getCode2();
    }

    @Override
    public String value2() {
        return getEmoji();
    }

    @Override
    public String value3() {
        return getUnicode();
    }

    @Override
    public CountryFlagRecord value1(String value) {
        setCode2(value);
        return this;
    }

    @Override
    public CountryFlagRecord value2(String value) {
        setEmoji(value);
        return this;
    }

    @Override
    public CountryFlagRecord value3(String value) {
        setUnicode(value);
        return this;
    }

    @Override
    public CountryFlagRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountryFlagRecord
     */
    public CountryFlagRecord() {
        super(CountryFlag.COUNTRY_FLAG);
    }

    /**
     * Create a detached, initialised CountryFlagRecord
     */
    public CountryFlagRecord(String code2, String emoji, String unicode) {
        super(CountryFlag.COUNTRY_FLAG);

        setCode2(code2);
        setEmoji(emoji);
        setUnicode(unicode);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CountryFlagRecord
     */
    public CountryFlagRecord(jooq.setup.tables.pojos.CountryFlag value) {
        super(CountryFlag.COUNTRY_FLAG);

        if (value != null) {
            setCode2(value.getCode2());
            setEmoji(value.getEmoji());
            setUnicode(value.getUnicode());
            resetChangedOnNotNull();
        }
    }
}
