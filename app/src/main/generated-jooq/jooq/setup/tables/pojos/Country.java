/*
 * This file is generated by jOOQ.
 */
package jooq.setup.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Country implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String code;
    private final String name;
    private final String continent;
    private final String region;
    private final Float surfaceArea;
    private final Short indepYear;
    private final Integer population;
    private final Float lifeExpectancy;
    private final BigDecimal gnp;
    private final BigDecimal gnpOld;
    private final String localName;
    private final String governmentForm;
    private final String headOfState;
    private final Integer capital;
    private final String code2;

    public Country(Country value) {
        this.code = value.code;
        this.name = value.name;
        this.continent = value.continent;
        this.region = value.region;
        this.surfaceArea = value.surfaceArea;
        this.indepYear = value.indepYear;
        this.population = value.population;
        this.lifeExpectancy = value.lifeExpectancy;
        this.gnp = value.gnp;
        this.gnpOld = value.gnpOld;
        this.localName = value.localName;
        this.governmentForm = value.governmentForm;
        this.headOfState = value.headOfState;
        this.capital = value.capital;
        this.code2 = value.code2;
    }

    public Country(
        String code,
        String name,
        String continent,
        String region,
        Float surfaceArea,
        Short indepYear,
        Integer population,
        Float lifeExpectancy,
        BigDecimal gnp,
        BigDecimal gnpOld,
        String localName,
        String governmentForm,
        String headOfState,
        Integer capital,
        String code2
    ) {
        this.code = code;
        this.name = name;
        this.continent = continent;
        this.region = region;
        this.surfaceArea = surfaceArea;
        this.indepYear = indepYear;
        this.population = population;
        this.lifeExpectancy = lifeExpectancy;
        this.gnp = gnp;
        this.gnpOld = gnpOld;
        this.localName = localName;
        this.governmentForm = governmentForm;
        this.headOfState = headOfState;
        this.capital = capital;
        this.code2 = code2;
    }

    /**
     * Getter for <code>public.country.code</code>.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Getter for <code>public.country.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.country.continent</code>.
     */
    public String getContinent() {
        return this.continent;
    }

    /**
     * Getter for <code>public.country.region</code>.
     */
    public String getRegion() {
        return this.region;
    }

    /**
     * Getter for <code>public.country.surface_area</code>.
     */
    public Float getSurfaceArea() {
        return this.surfaceArea;
    }

    /**
     * Getter for <code>public.country.indep_year</code>.
     */
    public Short getIndepYear() {
        return this.indepYear;
    }

    /**
     * Getter for <code>public.country.population</code>.
     */
    public Integer getPopulation() {
        return this.population;
    }

    /**
     * Getter for <code>public.country.life_expectancy</code>.
     */
    public Float getLifeExpectancy() {
        return this.lifeExpectancy;
    }

    /**
     * Getter for <code>public.country.gnp</code>. GNP is Gross national product
     */
    public BigDecimal getGnp() {
        return this.gnp;
    }

    /**
     * Getter for <code>public.country.gnp_old</code>.
     */
    public BigDecimal getGnpOld() {
        return this.gnpOld;
    }

    /**
     * Getter for <code>public.country.local_name</code>.
     */
    public String getLocalName() {
        return this.localName;
    }

    /**
     * Getter for <code>public.country.government_form</code>.
     */
    public String getGovernmentForm() {
        return this.governmentForm;
    }

    /**
     * Getter for <code>public.country.head_of_state</code>.
     */
    public String getHeadOfState() {
        return this.headOfState;
    }

    /**
     * Getter for <code>public.country.capital</code>.
     */
    public Integer getCapital() {
        return this.capital;
    }

    /**
     * Getter for <code>public.country.code2</code>. Following ISO 3166-1
     * alpha-2 code
     */
    public String getCode2() {
        return this.code2;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Country other = (Country) obj;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.continent == null) {
            if (other.continent != null)
                return false;
        }
        else if (!this.continent.equals(other.continent))
            return false;
        if (this.region == null) {
            if (other.region != null)
                return false;
        }
        else if (!this.region.equals(other.region))
            return false;
        if (this.surfaceArea == null) {
            if (other.surfaceArea != null)
                return false;
        }
        else if (!this.surfaceArea.equals(other.surfaceArea))
            return false;
        if (this.indepYear == null) {
            if (other.indepYear != null)
                return false;
        }
        else if (!this.indepYear.equals(other.indepYear))
            return false;
        if (this.population == null) {
            if (other.population != null)
                return false;
        }
        else if (!this.population.equals(other.population))
            return false;
        if (this.lifeExpectancy == null) {
            if (other.lifeExpectancy != null)
                return false;
        }
        else if (!this.lifeExpectancy.equals(other.lifeExpectancy))
            return false;
        if (this.gnp == null) {
            if (other.gnp != null)
                return false;
        }
        else if (!this.gnp.equals(other.gnp))
            return false;
        if (this.gnpOld == null) {
            if (other.gnpOld != null)
                return false;
        }
        else if (!this.gnpOld.equals(other.gnpOld))
            return false;
        if (this.localName == null) {
            if (other.localName != null)
                return false;
        }
        else if (!this.localName.equals(other.localName))
            return false;
        if (this.governmentForm == null) {
            if (other.governmentForm != null)
                return false;
        }
        else if (!this.governmentForm.equals(other.governmentForm))
            return false;
        if (this.headOfState == null) {
            if (other.headOfState != null)
                return false;
        }
        else if (!this.headOfState.equals(other.headOfState))
            return false;
        if (this.capital == null) {
            if (other.capital != null)
                return false;
        }
        else if (!this.capital.equals(other.capital))
            return false;
        if (this.code2 == null) {
            if (other.code2 != null)
                return false;
        }
        else if (!this.code2.equals(other.code2))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.continent == null) ? 0 : this.continent.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        result = prime * result + ((this.surfaceArea == null) ? 0 : this.surfaceArea.hashCode());
        result = prime * result + ((this.indepYear == null) ? 0 : this.indepYear.hashCode());
        result = prime * result + ((this.population == null) ? 0 : this.population.hashCode());
        result = prime * result + ((this.lifeExpectancy == null) ? 0 : this.lifeExpectancy.hashCode());
        result = prime * result + ((this.gnp == null) ? 0 : this.gnp.hashCode());
        result = prime * result + ((this.gnpOld == null) ? 0 : this.gnpOld.hashCode());
        result = prime * result + ((this.localName == null) ? 0 : this.localName.hashCode());
        result = prime * result + ((this.governmentForm == null) ? 0 : this.governmentForm.hashCode());
        result = prime * result + ((this.headOfState == null) ? 0 : this.headOfState.hashCode());
        result = prime * result + ((this.capital == null) ? 0 : this.capital.hashCode());
        result = prime * result + ((this.code2 == null) ? 0 : this.code2.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Country (");

        sb.append(code);
        sb.append(", ").append(name);
        sb.append(", ").append(continent);
        sb.append(", ").append(region);
        sb.append(", ").append(surfaceArea);
        sb.append(", ").append(indepYear);
        sb.append(", ").append(population);
        sb.append(", ").append(lifeExpectancy);
        sb.append(", ").append(gnp);
        sb.append(", ").append(gnpOld);
        sb.append(", ").append(localName);
        sb.append(", ").append(governmentForm);
        sb.append(", ").append(headOfState);
        sb.append(", ").append(capital);
        sb.append(", ").append(code2);

        sb.append(")");
        return sb.toString();
    }
}
