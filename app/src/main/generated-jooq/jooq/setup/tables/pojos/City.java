/*
 * This file is generated by jOOQ.
 */
package jooq.setup.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class City implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String name;
    private final String countryCode;
    private final String district;
    private final Integer population;
    private final String localName;

    public City(City value) {
        this.id = value.id;
        this.name = value.name;
        this.countryCode = value.countryCode;
        this.district = value.district;
        this.population = value.population;
        this.localName = value.localName;
    }

    public City(
        Integer id,
        String name,
        String countryCode,
        String district,
        Integer population,
        String localName
    ) {
        this.id = id;
        this.name = name;
        this.countryCode = countryCode;
        this.district = district;
        this.population = population;
        this.localName = localName;
    }

    /**
     * Getter for <code>public.city.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.city.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.city.country_code</code>.
     */
    public String getCountryCode() {
        return this.countryCode;
    }

    /**
     * Getter for <code>public.city.district</code>.
     */
    public String getDistrict() {
        return this.district;
    }

    /**
     * Getter for <code>public.city.population</code>.
     */
    public Integer getPopulation() {
        return this.population;
    }

    /**
     * Getter for <code>public.city.local_name</code>. City local name
     */
    public String getLocalName() {
        return this.localName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final City other = (City) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.countryCode == null) {
            if (other.countryCode != null)
                return false;
        }
        else if (!this.countryCode.equals(other.countryCode))
            return false;
        if (this.district == null) {
            if (other.district != null)
                return false;
        }
        else if (!this.district.equals(other.district))
            return false;
        if (this.population == null) {
            if (other.population != null)
                return false;
        }
        else if (!this.population.equals(other.population))
            return false;
        if (this.localName == null) {
            if (other.localName != null)
                return false;
        }
        else if (!this.localName.equals(other.localName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.countryCode == null) ? 0 : this.countryCode.hashCode());
        result = prime * result + ((this.district == null) ? 0 : this.district.hashCode());
        result = prime * result + ((this.population == null) ? 0 : this.population.hashCode());
        result = prime * result + ((this.localName == null) ? 0 : this.localName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("City (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(countryCode);
        sb.append(", ").append(district);
        sb.append(", ").append(population);
        sb.append(", ").append(localName);

        sb.append(")");
        return sb.toString();
    }
}
